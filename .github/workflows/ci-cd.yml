name: Build and Push Image to Amazon ECR Then Deploy to EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-southeast-1
  ECR_REPOSITORY: product-backend-cicd
  IMAGE_TAG: latest

jobs:
  # ---------- CI: Build & Push ----------
  build-and-push:
    name: Build, Tag, and Push image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Output image URI
        run: |
          echo "Image pushed: $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"

  # ---------- CD: Deploy to EC2 ----------
#  deploy:
#    name: Deploy to EC2
#    runs-on: ubuntu-latest
#    needs: build-and-push
#
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: SSH into EC2 and deploy
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key: ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            cd /home/ec2-user/product-backend
#
#            echo "Writing .env file..."
#            cat > .env << EOF
#            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
#            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
#            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
#            PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}
#            PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
#            EOF
#
#            echo "Logging into Amazon ECR..."
#            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 817100478208.dkr.ecr.ap-southeast-1.amazonaws.com
#
#            echo "Pulling latest containers..."
#            docker-compose pull
#
#            echo "Recreating containers..."
#            docker-compose up -d --force-recreate
#
#            echo "Deployment complete âœ…"
